generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique @db.VarChar(255)
  password        String             @db.VarChar(255)
  name            String             @db.VarChar(100)
  role            Role
  isActive        Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Customer        Customer[]
  DeliveryPartner DeliveryPartner[]
  Admin           Admin[]

  @@index([role])
}

model Customer {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  role           Role         @default(CUSTOMER)
  phone          String       @unique @db.VarChar(15) 
  liveLocation   LiveLocation @relation(fields: [liveLocationId], references: [id])
  address        String      @db.VarChar(255)
  liveLocationId Int
}

model DeliveryPartner {
  id             Int                     @id @default(autoincrement())
  user           User                    @relation(fields: [userId], references: [id])
  userId         Int
  role           Role                    @default(DELIVERYPARTNER)
  phone          String                  @unique @db.VarChar(255)
  email          String                  @unique @db.VarChar(255)
  password       String                   @db.VarChar(255)
  address        String                     @db.VarChar(255)
  liveLocation   LiveLocation            @relation(fields: [liveLocationId], references: [id])
  liveLocationId Int
  Branch         BranchDeliveryPartner[]

  @@index([role])
}

model Admin {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  role     Role   @default(ADMIN)
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)
}

model LiveLocation {
  id              Int               @id @default(autoincrement())
  latitude        Float
  longitude       Float
  Customer        Customer[]
  DeliveryPartner DeliveryPartner[]
  Branch          Branch[]
}

enum Role {
  CUSTOMER
  ADMIN
  DELIVERYPARTNER
}

model Branch {
  id              Int                     @id @default(autoincrement())
  name            String          @db.VarChar(100)  
  address         String        @db.VarChar(255)
  liveLocation    LiveLocation            @relation(fields: [liveLocationId], references: [id])
  liveLocationId  Int
  deliveryPartner BranchDeliveryPartner[]

  @@index([name])
}

model BranchDeliveryPartner {
  id                Int             @id @default(autoincrement())
  deliveryPartner   DeliveryPartner @relation(fields: [deliveryPartnerId], references: [id])
  deliveryPartnerId Int
  branch            Branch          @relation(fields: [branchId], references: [id])
  branchId          Int
}
